/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number
would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

fn divmod(n : u64, d : u64) -> (u64, u64) {
	let q = n /d;
	(q, n - (q*d))
}

fn div(n : u64) -> u64 {
	let mut divisors = 0;

	let mut q;

	for i in 1..(((n as f64).sqrt()+1.) as u64) {
		q = divmod(n, i);
		// println!("{:?}/{:?} {:?}", mut_n,  i, q);

		if q.1 == 0 {
			if q.0 >= i {
				// println!("{:?} is a div.", i);
				divisors += 1;

				if q.0 > i {
					// println!("{:?} is a div.", n / i);
					divisors += 1;
				}
			}
		}

	}

	divisors
}

fn main() {
	let mut current : u64 = 0;

	for i in 1..100_000 {
		current += i;

		let divisors = div(current);

		// println!("{:?} has {:?} divisors.", current, divisors);
		// println!("");

		if divisors >= 500 {
			println!("{:?} has {:?} divisors.", current, divisors);
			break
		}

		// println!("{:?} {:?}", current, div(current));
	}
}
